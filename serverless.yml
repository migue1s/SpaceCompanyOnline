service:
  name: space-company-online

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  tableThroughputs:
    prod: 1
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  memorySize: 512
  tags:
    project: space-company
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ SpaceCompanyTable, Arn ]
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

functions:
  register:
    handler: src/user.register
    events:
      - http:
          method: post
          path: user/register
  login:
    handler: src/user.login
    events:
      - http:
          method: post
          path: user/login


environment:
  tableName:
    Ref: SpaceCompanyTable

resources:
  Resources:
    SpaceCompanyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-spaceCompanyTable
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: password
            AttributeType: S
          - AttributeName: save
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}